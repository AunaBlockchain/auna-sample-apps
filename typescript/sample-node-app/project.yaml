application: 
  id: sample-node-app
  name: sample-node-app
  description: AunaBlockchain Node.js sample DApp
  category: examples
network: 
  id: sample-network
  name: sample-network
  version: "2.0.0"
  action: "exists"
  orderers: 
  - nodes: 3
    org: bcs-ordering
    consensus: etcdraft
  channels: 
  - channel: my-channel
    orgs:
    - bcs
  organizations:
  - id: bcs
    hosted: true
  peers: 
  - nodes: 2
    org: bcs
  chaincodes:
  - smartcontract: test-go
    channel: my-channel
    orgs:
    - bcs
  - smartcontract: test-node
    channel: my-channel
    orgs:
    - bcs
smartcontracts:
- id: test-go
  endorsement: '{"identities":[{"role":{"name":"member","mspId":"bcsMSP"}}],"policy":{"signed-by":0}}' #en el objeto roles, campo mspId, cambiar "bcs" por identificador de isv, ejemplo: "mspId":"bcsMSP"
  metadapath:
  version: v1.0.0
  path: smartcontracts/test-go
  type: golang
- id: test-node
  endorsement: '{"identities":[{"role":{"name":"member","mspId":"bcsMSP"}}],"policy":{"signed-by":0}}' #en el objeto roles, campo mspId, cambiar "bcs" por identificador de isv, ejemplo: "mspId":"bcsMSP"
  metadapath:
  version: v1.0.0
  path: smartcontracts/test-node
  type: node
api:
  internal:
    - name: "sample-internal-01"
      protocol: "HTTP"
      port: "4001"
      host: "0.0.0.0"
      path: "apis/internal/sample-internal"
      description: "Internal Api example"
      runtime:
        image: ""
        type: "node-ts"
        version: "14"
      env:
        - name: "SOME_VAR"
          value: "someValue"
      report: {}
      tasks: []
      cache: []
      mailer: {}
      metrics:
        enabled: true
        port: 8000
        endpoint: "/metrics"
      singleton: true
      permissions: []
  external:
    - name: "sample-external-01"
      protocol: "HTTP"
      port: "4000"
      host: "0.0.0.0"
      path: "/apis/external/sample-external"
      description: "External Api example"
      runtime:
        image: ""
        type: "node-ts"
        version: "14"
      env:
        - name: "SOME_OTHER_VAR"
          value: "anotherValue"
      report: {}
      tasks: []
      cache: []
      mailer: {}
      metrics:
        enabled: true
        port: 8000
        endpoint: "/metrics"
      singleton: true
      permissions: []
  both: []  
cache : []
tasks:
  - tasktag: "sample-task"
    category: "examples"
    description: "Example process that runs at 18:30 every week day Monday to Friday"
    cron: "30 18 * * 1-5"
    task: "curl --fail -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"message\":\"hello\"}' 'http://sample-interal:4001/echo'"
datasource: []
env: []
permissions: []